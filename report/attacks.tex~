This is attacks.tex and the below is copied from the google doc: 

\subsection{Dropping traffic} 
A compromised switch could simply drop packets sent to it, thus creating a service interruption. However, a controller would probably notice this quickly -- it would appear as though the switch had failed, and automated recovery mechanisms would be initiated.

\subsection{Cloning or diverting traffic}
A compromised switch could ensure that traffic would be routed through an adversary’s middlebox, or could clone traffic and send the cloned stream to the adversary. This would be more difficult for the controller to detect, unless it caused considerable slowdown. This attack could conceivably be used for purposes such as the NSA’s MUSCULAR program, which intercepts traffic as it flows between private data centers \cite{muscular}. 

\subsection{DoS other switches}
By injecting traffic, a switch could deliberately attempt to overload neighboring switches’ TCAMs or otherwise DoS them.

\subsection{DoS the controller / the control channel}
By sending requests to the controller, the switch could attempt to overload it. One could fine-tune the control messages to maximize churn or CPU consumption in the controller.

However, our results show that a TCP congestion control successfully prevents a single switch from denying service to the controller; instead the extra packets from the switch are dropped.

\subsection{DDoS the controller by spoofing many switches}
What happens if in a network with n actual switches, the controller receives “hello” messages from n^2 switches, for example? This works around the throttling problem where a controller may simple rate-limit each switch.

\subsection{Advertising false host attachments}
A compromised switch can send the controller packet-in events with false packets, which falsely claim to have a particular MAC address attached to them. This could lead the controller to believe that the compromised switch should receive traffic intended for the host. While this would soon lead to packet loss and a noticeable disruption, it would nevertheless allow a switch to eavesdrop when it would not normally be in a position to do so.

\subsection{Falsify measurement reports}
A switch may return false results in response to a read-state  measurement message, thus causing the controller to behave irrationally. For example, a switch could falsify or hide a DoS attack, elephant flows, etc.

\subsection{Ignoring rules}
A switch could simply ignore flow-table modification requests. For example, dropping packets will be noticed quickly; but a switch could allow packets to pass through that should have been dropped. Because of the difficulty of querying flow table state, the controller may not become aware of this. A compromised switch could thus operate in “stealth mode” and the inconsistent flow table might only be noticed once the switch allows a DoS attack to pass through, for example.

\subsection{Modifying VLAN tags}

\subsection{Reporting flow mods to an adversary}
An adversary could hope to learn about network traffic by observing flow mods. Certain flow mods might indicate that the controller has, for example, detected an intrusion, or that a specific host has connected to the network in a certain location. Thus, just knowing what flow mods are being issued by the controller could be a source of interesting information for an adversary.

\subsection{Even more...}
